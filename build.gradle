plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }

    maven { url "https://maven.shedaniel.me" }
    maven { url "https://www.cursemaven.com" }

    maven {
        url "https://hephaestus.dev/release"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    // KubeJS for compatibility testing
    modImplementation 'curse.maven:kubejs-395864:3269809'
    modImplementation 'curse.maven:rhino-416294:3187177'
    modImplementation 'me.shedaniel:architectury-fabric:1.7.117'

    // CCA
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:2.8.0"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:2.8.0"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:2.8.0"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:2.8.0"

    modImplementation "dev.hephaestus:FibLib:${project.fiblib_version}"
    include "dev.hephaestus:FibLib:${project.fiblib_version}"

    // REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:5.11.202"
    modRuntime "me.shedaniel:RoughlyEnoughItems:5.11.202"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
